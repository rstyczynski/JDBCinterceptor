########################################################################################################

i2) Time measurement is started before SQL PREPARE command and stopped after EXECUTE. It's possible that 
application logic does something else in between, what will influence measured time. This is a by design 
behavior, but should be somehow handled. Possibly it's good to add time measurement for both full cycle, 
and execution only.


Current approach measures clock time of DB time and application time.

pre       create        post  app work  pre       execute      post   app work  pre       close       post
----> ---------------> ---->   (...)    ----> ---------------> ---->   (...)    ----> ---------------> ---->
  |                                                                              |          
  |                                    time                                      |       
  |<---------------------------------------------------------------------------->| 
        

Correct apprach should measure real time spent on DB calls.


pre       create        post  app work  pre       execute      post  app work  pre       close       post
----> ---------------> ---->  (...)     ----> ---------------> ---->  (...)    ----> ---------------> ---->
  |                      |               |                      |               |                      |            
  |          Ts          |               |          Te          |               |           Tf         |         
  |<-------------------->|               |<-------------------->|               |<-------------------->|  
        

Time should be stored in time(sate)=T
Global variable should be maintaned Tglobal=Tglobal+T

Both time(state) and Tglobal are referenced from JDBCcallFSMstate, which is referenced from 
JDBCmonitor.jdbcGlobalState to be available for HTML console. 


